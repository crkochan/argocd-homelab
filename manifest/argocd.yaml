apiVersion: v1
kind: ConfigMap
metadata:
  name: cmp-plugin
  namespace: argocd
data:
  avp-directory-include.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: avp-directory-include
    spec:
      allowConcurrency: true
      generate:
        command:
          - bash
          - "-c"
          - |
            argocd-vault-plugin generate $ARGOCD_ENV_FILE_NAME
      lockRepo: false
  kustomize-inline.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: kustomize-inline
    spec:
      allowConcurrency: true
      generate:
        command:
          - /bin/sh
          - -c
        args:
          - |
            echo "$ARGOCD_ENV_KUSTOMIZATION_YAML" > kustomization.yaml;
            kustomize build
      lockRepo: false
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 5.53.10
    helm:
      values: |
        configs:
          params:
            server.insecure: true
          cm:
            accounts.<path:argo-users#user1>: apiKey, login
            kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
            resource.compareoptions: |
              ignoreAggregatedRoles: true
            url: "https://argocd.<path:stringreplacesecret#domain>"
            dex.config: |
              connectors:
                - type: github
                  name: GitHub
                  id: github
                  config:
                    clientID: <path:sso#sso-client-id>
                    clientSecret: <path:sso#sso-client-secret>
                    orgs:
                    - name: <path:sso#sso-org>
          rbac:
            policy.csv: |
              g, ArgoCD Admin, role:admin
              g, <path:sso#sso-org>:admins, role:admin
              g, <path:argo-users#user1>, role:admin
        repoServer:
          rbac:
            - apiGroups: [""]
              resources: ["secrets"]
              verbs: ["get", "watch", "list"]
          env:
            - name: XDG_CONFIG_HOME
              value: /.config
            - name: SOPS_AGE_KEY_FILE
              value: /.config/sops/age/keys.txt
          volumes:
            - name: cmp-plugin
              configMap:
                name: cmp-plugin
            - name: custom-tools
              emptyDir: {}
            - name: cmp-tmp
              emptyDir: {}
            - name: sops-age
              secret:
                secretName: age-private-key
          deploymentAnnotations:
            reloader.stakater.com/auto: "true"
          initContainers:
            - name: install-ksops
              image: viaductoss/ksops
              command: ["/bin/sh", "-c"]
              args:
                - echo "Installing KSOPS...";
                  mv ksops /custom-tools/;
                  mv kustomize /custom-tools/;
                  echo "Done.";
              volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools
            - name: download-tools
              image: registry.access.redhat.com/ubi8
              env:
                - name: AVP_VERSION
                  value: 1.16.0
              command: [sh, -c]
              args:
                - >-
                  curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_$(arch | sed s/aarch64/arm64/ | sed s/x86_64/amd64/) -o argocd-vault-plugin &&
                  chmod +x argocd-vault-plugin &&
                  mv argocd-vault-plugin /custom-tools/
              volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools
          extraContainers:
            - name: plugin-avp-directory-include
              command: [/var/run/argocd/argocd-cmp-server]
              image: "{{ default .Values.global.image.repository .Values.server.image.repository }}:{{ default (include \"argo-cd.defaultTag\" .) .Values.server.image.tag }}"
              env:
              - name: AVP_TYPE
                value: kubernetessecret
              securityContext:
                runAsNonRoot: true
                runAsUser: 999
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: cmp-tmp
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  subPath: avp-directory-include.yaml
                  name: cmp-plugin
                - name: custom-tools
                  subPath: argocd-vault-plugin
                  mountPath: /usr/local/bin/argocd-vault-plugin
            - name: plugin-kustomize-inline
              command: [/var/run/argocd/argocd-cmp-server]
              image: "{{ default .Values.global.image.repository .Values.server.image.repository }}:{{ default (include \"argo-cd.defaultTag\" .) .Values.server.image.tag }}"
              securityContext:
                runAsNonRoot: true
                runAsUser: 999
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: cmp-tmp
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  subPath: kustomize-inline.yaml
                  name: cmp-plugin
          volumeMounts:
            - mountPath: /usr/local/bin/kustomize
              name: custom-tools
              subPath: kustomize
            - mountPath: /usr/local/bin/ksops
              name: custom-tools
              subPath: ksops
            - mountPath: /.config/sops/age/keys.txt
              name: sops-age
              subPath: keys.txt
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-http
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: http
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - argocd.<path:stringreplacesecret#domain>
  rules:
    - host: argocd.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-grpc
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: grpc
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - argocd.<path:stringreplacesecret#domain>
  rules:
    - host: argocd.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-tailscale
  namespace: argocd
  annotations:
    external-dns.alpha.kubernetes.io/controller: none
spec:
  ingressClassName: tailscale
  tls:
    - hosts:
        - argocd
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: http
