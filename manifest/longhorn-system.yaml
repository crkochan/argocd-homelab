kind: Namespace
apiVersion: v1
metadata:
  name: longhorn-system
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn-csi-classes
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "20"
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    path: kustomize/longhorn-csi/classes
    repoURL: https://github.com/crkochan/argocd-homelab.git
    targetRevision: HEAD
    plugin:
      name: kustomize-inline
      env:
        - name: KUSTOMIZATION_YAML
          value: |
            apiVersion: kustomize.config.k8s.io/v1beta1
            kind: Kustomization
            resources:
              - volume-snapshot-class.yaml
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: longhorn-system
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  destination:
    namespace: longhorn-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: longhorn
    repoURL: https://charts.longhorn.io
    targetRevision: 1.6.1
    helm:
      valuesObject:
        metrics:
          serviceMonitor:
            enabled: true
        networkPolicies:
          enabled: true
        preUpgradeChecker:
          jobEnabled: false
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn-ui-http
  namespace: longhorn-system
  annotations:
    argocd.argoproj.io/sync-wave: "50"
    nginx.ingress.kubernetes.io/backend-protocol: http
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - turing-kube-longhorn.<path:stringreplacesecret#domain>
  rules:
    - host: turing-kube-longhorn.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: longhorn-frontend
                port:
                  name: http
